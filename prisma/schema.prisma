// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Patient {
  id               String         @id @default(uuid())
  firstName        String
  middleName       String
  lastName         String
  sex              Sex
  birthDate        DateTime
  region           String
  city             String
  woreda           String
  kebele           Int?
  mobileNumber     String
  email            String?
  occupation       String?
  emergencyContact String?
  bloodType        String?
  patientRecord    PatientRecord?
  doctor           Doctor?        @relation(fields: [doctorId], references: [id])
  doctorId         String?
  appointments     Appointment[]
}

model PatientRecord {
  id               String   @id @default(uuid())
  patientType      String   @default("Out")
  patientCondition String
  allergies        String[]
  familyHistory    String?
  height           Float?
  weight           Float?
  bloodPressure    Float?
  temperature      Float?
  patient          Patient  @relation(fields: [patientId], references: [id])
  patientId        String   @unique
}

model Appointment {
  id          String   @id @default(uuid())
  type        String
  datetime    DateTime
  scheduledAt DateTime @default(now())
  updatedAt   DateTime @updatedAt
  patient     Patient  @relation(fields: [patientId], references: [id])
  doctor      Doctor   @relation(fields: [doctorId], references: [id])
  patientId   String
  doctorId    String
}

model Staff {
  id               String           @id @default(uuid())
  username         String           @unique
  password         String
  firstName        String
  middleName       String
  lastName         String
  sex              Sex
  birthDate        DateTime
  region           String
  city             String
  woreda           String
  kebele           Int?
  mobileNumber     String
  email            String
  role             Role             @relation(fields: [roleId], references: [id])
  specialization   String?
  hireDate         DateTime         @default(now())
  emergencyContact String?
  employmentStatus EmploymentStatus
  notes            String[]
  doctor           Doctor?
  department       Department?      @relation(fields: [departmentId], references: [id])
  departmentId     String?
  roleId           String
}

model Doctor {
  id           String        @id @default(uuid())
  patients     Patient[]
  staff        Staff         @relation(fields: [staffId], references: [id])
  staffId      String        @unique
  appointments Appointment[]
}

model Role {
  id          String        @id @default(uuid())
  name        String
  staff       Staff[]
  permissions Persmission[]
}

model Department {
  id          String  @id @default(uuid())
  name        String
  description String?
  staff       Staff[]
}

model Persmission {
  id          String  @id @default(uuid())
  name        String
  description String?
  role        Role    @relation(fields: [roleId], references: [id])
  roleId      String
}

enum Sex {
  MALE
  FEMALE
}

enum EmploymentStatus {
  Active
  OnLeave
  Retired
}
